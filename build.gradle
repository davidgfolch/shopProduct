plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot.experimental.thin-launcher' version '1.0.23.RELEASE'
    id 'java'
    id 'maven'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "2.7.1"
}

group = 'com.dgf'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

apply plugin: 'jacoco'

// thin-launcher shouldn't need this...
jar {
    manifest {
        attributes(
                'Start-Class': 'com.dgf.shopproduct.App'
        )
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar.dependsOn = [thinProperties] //thin-launcher

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.session', name: 'spring-session-core'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    getAdditionalSourceDirs().setFrom(files(sourceSets.main.allSource.srcDirs))
    getSourceDirectories().setFrom(files(sourceSets.main.allSource.srcDirs))
    getClassDirectories().setFrom(files(sourceSets.main.output))
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn = subprojects.test
    getAdditionalSourceDirs().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getSourceDirectories().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getClassDirectories().setFrom(files(subprojects.sourceSets.main.output))
    getExecutionData().setFrom(files(subprojects.jacocoTestReport.executionData))
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}
